#|Andrés Sebastián Arteaga Cabezas
Ejercicio 18 Tema 2: Inducción de Conjunciones Lógicas|#

(#%require racket)
(include "T2Ejercicio4.rkt")
(include "T2Ejercicio8.rkt")
(include "T2Ejercicio14.rkt")
(include "T2Ejercicio17.rkt")

(define (ord-por-score PSET NSET conceptos)
  (let*((conceptos (remove-duplicates conceptos))
        (sc (map (lambda(x)
                   (score-CL x PSET NSET))
                 conceptos))
        (lissc (map (lambda (x y) (append (list x) (list y)))
                    conceptos sc))
        (d '()))
    (for-each (lambda (x)
            (for-each (lambda (y)
                        (if(equal? x (cadr y))
                           (set! d (append d (list(car y))))
                           'null))
                      lissc))
          sc)
    d))

(define (HGS0 PSET NSET CSET HSET)
  (let*((CSET CSET)
        (OSET '())
        (meta (car PSET)))
    (for-each (lambda (x)
                (let*((new '()))
                  (for-each (lambda (c)
                              (when (> (score-CL c PSET NSET)
                                       (score-CL x PSET NSET))
                                (set! new (append new (list c)))))
                            (let*((S '()))
                              (map (lambda (h) (let*((Slocal (especializaciones-CL x meta h)))
                                                 (set! S (append S Slocal))))
                                   (cdr NSET))
                              S))
                  (if(empty? new) (set! CSET (append CSET (list x)))
                     (for-each (lambda (c)
                                 (and (set! OSET (append OSET (list c)))
                                      (for-each (lambda (v)
                                                  (when(= -1 (cmp-concepto-CL c v))
                                                    (if(> (score-CL v PSET NSET) (score-CL c PSET NSET))
                                                       (set! OSET (remove (list v) OSET))
                                                       (set! CSET (remove (list c) CSET)))))
                                                CSET)))
                               new))))
              HSET)
    (if(empty? OSET)
       (let*((resultado (ord-por-score PSET NSET CSET)))
         (car (reverse resultado)))
       (let*((mejorSET (take (ord-por-score PSET NSET (append CSET OSET)) 10))
             (CLOSED-SET (let((a '()))
                           (for-each (lambda (x)
                                       (for-each (lambda (y)
                                                   (if(equal? x y)
                                                      (set! a (append a (list x)))
                                                      'null))
                                                 CSET))
                                     mejorSET)
                           a))
             (OPEN-SET (let((a '()))
                         (for-each (lambda (x)
                                     (for-each (lambda (y)
                                                 (if(equal? x y)
                                                    (set! a (append a (list x)))
                                                    'null))
                                               OSET))
                                   mejorSET)
                         a)))
         (HGS0 PSET NSET CLOSED-SET OPEN-SET)))))

(define (HGS ejemplos)
  (let*((meta (car ejemplos))
        (ejPositivo (remove* '(null)
                             (map (lambda (x)
                                    (if(equal? '+ (car(reverse x)))
                                       x 'null))
                                  (cdr ejemplos))))
        (ejNegativo (remove* '(null)
                             (map (lambda (x)
                                    (if(equal? '- (car(reverse x)))
                                       x 'null))
                                  (cdr ejemplos))))
        (apli (HGS0 (cons meta ejPositivo) (cons meta ejNegativo) '() (list(concepto-CL-mas-general meta))))
        )
    apli))

;;Ejecución
;;===================================================================
;(include "Ejercicio8.rkt")
;(define ejemplos (leer-ejemplos "ejemplos3.scm"))
;(HGS ejemplos)